use std::slice;

#[derive(Debug)]
pub enum Button {
    LeftNorth,
    LeftSouth,
    LeftEast,
    LeftWest,
    LeftSpecial,
    RightNorth,
    RightSouth,
    RightEast,
    RightWest,
    RightSpecial,
    L1,
    R1,
    L2,
    R2,
    TriggerHappy1,
    TriggerHappy2,
    TriggerHappy3,
    TriggerHappy4,
    TriggerHappy5,
    TriggerHappy6,
    TriggerHappy7,
    TriggerHappy8,
    TriggerHappy9,
    TriggerHappy10,
    TriggerHappy11,
    TriggerHappy12,
    TriggerHappy13,
    TriggerHappy14,
    TriggerHappy15,
    TriggerHappy16,
    TriggerHappy17,
    TriggerHappy18,
    TriggerHappy19,
    TriggerHappy20,
    TriggerHappy21,
    TriggerHappy22,
    TriggerHappy23,
    TriggerHappy24,
    TriggerHappy25,
    TriggerHappy26,
    TriggerHappy27,
    TriggerHappy28,
    TriggerHappy29,
    TriggerHappy30,
    TriggerHappy31,
    TriggerHappy32,
    TriggerHappy33,
    TriggerHappy34,
}

impl Button {
    pub(super) fn to_evdev_button(&self) -> input_linux::Key {
        use input_linux::Key::*;
        use Button::*;
        // https://docs.rs/input-linux/0.0.1/input_linux/enum.Key.html
        match &self {
            LeftNorth => ButtonDpadUp,
            LeftSouth => ButtonDpadDown,
            LeftEast => ButtonDpadLeft,
            LeftWest => ButtonDpadRight,
            LeftSpecial => ButtonStart,
            RightNorth => ButtonNorth,
            RightSouth => ButtonSouth,
            RightEast => ButtonEast,
            RightWest => ButtonWest,
            RightSpecial => ButtonSelect,
            L1 => ButtonTL,
            R1 => ButtonTR,
            L2 => ButtonTL2,
            R2 => ButtonTR2,
            TriggerHappy1 => ButtonTriggerHappy1,
            TriggerHappy2 => ButtonTriggerHappy2,
            TriggerHappy3 => ButtonTriggerHappy3,
            TriggerHappy4 => ButtonTriggerHappy4,
            TriggerHappy5 => ButtonTriggerHappy5,
            TriggerHappy6 => ButtonTriggerHappy6,
            TriggerHappy7 => ButtonTriggerHappy7,
            TriggerHappy8 => ButtonTriggerHappy8,
            TriggerHappy9 => ButtonTriggerHappy9,
            TriggerHappy10 => ButtonTriggerHappy10,
            TriggerHappy11 => ButtonTriggerHappy11,
            TriggerHappy12 => ButtonTriggerHappy12,
            TriggerHappy13 => ButtonTriggerHappy13,
            TriggerHappy14 => ButtonTriggerHappy14,
            TriggerHappy15 => ButtonTriggerHappy15,
            TriggerHappy16 => ButtonTriggerHappy16,
            TriggerHappy17 => ButtonTriggerHappy17,
            TriggerHappy18 => ButtonTriggerHappy18,
            TriggerHappy19 => ButtonTriggerHappy19,
            TriggerHappy20 => ButtonTriggerHappy20,
            TriggerHappy21 => ButtonTriggerHappy21,
            TriggerHappy22 => ButtonTriggerHappy22,
            TriggerHappy23 => ButtonTriggerHappy23,
            TriggerHappy24 => ButtonTriggerHappy24,
            TriggerHappy25 => ButtonTriggerHappy25,
            TriggerHappy26 => ButtonTriggerHappy26,
            TriggerHappy27 => ButtonTriggerHappy27,
            TriggerHappy28 => ButtonTriggerHappy28,
            TriggerHappy29 => ButtonTriggerHappy29,
            TriggerHappy30 => ButtonTriggerHappy30,
            TriggerHappy31 => ButtonTriggerHappy31,
            TriggerHappy32 => ButtonTriggerHappy32,
            TriggerHappy33 => ButtonTriggerHappy33,
            TriggerHappy34 => ButtonTrigger,
        }
    }

    pub(super) fn all_buttons() -> slice::Iter<'static, Self> {
        use Button::*;
        [
            LeftNorth,
            LeftSouth,
            LeftEast,
            LeftWest,
            LeftSpecial,
            RightNorth,
            RightSouth,
            RightEast,
            RightWest,
            RightSpecial,
            L1,
            R1,
            L2,
            R2,
            TriggerHappy1,
            TriggerHappy2,
            TriggerHappy3,
            TriggerHappy4,
            TriggerHappy5,
            TriggerHappy6,
            TriggerHappy7,
            TriggerHappy8,
            TriggerHappy9,
            TriggerHappy10,
            TriggerHappy11,
            TriggerHappy12,
            TriggerHappy13,
            TriggerHappy14,
            TriggerHappy15,
            TriggerHappy16,
            TriggerHappy17,
            TriggerHappy18,
            TriggerHappy19,
            TriggerHappy20,
            TriggerHappy21,
            TriggerHappy22,
            TriggerHappy23,
            TriggerHappy24,
            TriggerHappy25,
            TriggerHappy26,
            TriggerHappy27,
            TriggerHappy28,
            TriggerHappy29,
            TriggerHappy30,
            TriggerHappy31,
            TriggerHappy32,
            TriggerHappy33,
            TriggerHappy34,
        ]
        .iter()
    }
}
